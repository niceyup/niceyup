/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../../../client/fetch-react-query'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '../../../../client/fetch-react-query'
import type {
  ResendQuestionMessageMutationRequest,
  ResendQuestionMessageMutationResponse,
  ResendQuestionMessagePathParams,
  ResendQuestionMessage400,
  ResendQuestionMessage401,
  ResendQuestionMessage403,
  ResendQuestionMessage404,
  ResendQuestionMessage429,
  ResendQuestionMessage500,
} from '../../types/ResendQuestionMessage'

function getResendQuestionMessageUrl({
  conversationId,
}: { conversationId: ResendQuestionMessagePathParams['conversationId'] }) {
  return `/conversations/${conversationId}/messages/resend-question` as const
}

/**
 * @description Resend a question message to a conversation
 * {@link /conversations/:conversationId/messages/resend-question}
 */
export async function resendQuestionMessage(
  {
    conversationId,
    data,
  }: {
    conversationId: ResendQuestionMessagePathParams['conversationId']
    data: ResendQuestionMessageMutationRequest
  },
  config: Partial<RequestConfig<ResendQuestionMessageMutationRequest>> & {
    client?: typeof fetch
  } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const requestData = data
  const res = await request<
    ResendQuestionMessageMutationResponse,
    ResponseErrorConfig<
      | ResendQuestionMessage400
      | ResendQuestionMessage401
      | ResendQuestionMessage403
      | ResendQuestionMessage404
      | ResendQuestionMessage429
      | ResendQuestionMessage500
    >,
    ResendQuestionMessageMutationRequest
  >({
    method: 'POST',
    url: getResendQuestionMessageUrl({ conversationId }).toString(),
    data: requestData,
    ...requestConfig,
  })
  return res.data
}
