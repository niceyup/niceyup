/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../../../client/fetch-react-query'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '../../../../client/fetch-react-query'
import type {
  GetDatabaseConnectionQueryResponse,
  GetDatabaseConnectionPathParams,
  GetDatabaseConnectionQueryParams,
  GetDatabaseConnection400,
  GetDatabaseConnection401,
  GetDatabaseConnection403,
  GetDatabaseConnection404,
  GetDatabaseConnection429,
  GetDatabaseConnection500,
} from '../../types/GetDatabaseConnection'

function getGetDatabaseConnectionUrl({
  databaseConnectionId,
}: {
  databaseConnectionId: GetDatabaseConnectionPathParams['databaseConnectionId']
}) {
  return `/database-connections/${databaseConnectionId}` as const
}

/**
 * @description Get database connection details
 * {@link /database-connections/:databaseConnectionId}
 */
export async function getDatabaseConnection(
  {
    databaseConnectionId,
    params,
  }: {
    databaseConnectionId: GetDatabaseConnectionPathParams['databaseConnectionId']
    params?: GetDatabaseConnectionQueryParams
  },
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<
    GetDatabaseConnectionQueryResponse,
    ResponseErrorConfig<
      | GetDatabaseConnection400
      | GetDatabaseConnection401
      | GetDatabaseConnection403
      | GetDatabaseConnection404
      | GetDatabaseConnection429
      | GetDatabaseConnection500
    >,
    unknown
  >({
    method: 'GET',
    url: getGetDatabaseConnectionUrl({ databaseConnectionId }).toString(),
    params,
    ...requestConfig,
  })
  return res.data
}
