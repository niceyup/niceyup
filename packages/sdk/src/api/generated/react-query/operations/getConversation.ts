/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../../../client/fetch-react-query'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '../../../../client/fetch-react-query'
import type {
  GetConversationQueryResponse,
  GetConversationPathParams,
  GetConversationQueryParams,
  GetConversation400,
  GetConversation401,
  GetConversation403,
  GetConversation404,
  GetConversation429,
  GetConversation500,
} from '../../types/GetConversation'

function getGetConversationUrl({
  conversationId,
}: { conversationId: GetConversationPathParams['conversationId'] }) {
  return `/conversations/${conversationId}` as const
}

/**
 * @description Get conversation details
 * {@link /conversations/:conversationId}
 */
export async function getConversation(
  {
    conversationId,
    params,
  }: {
    conversationId: GetConversationPathParams['conversationId']
    params?: GetConversationQueryParams
  },
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<
    GetConversationQueryResponse,
    ResponseErrorConfig<
      | GetConversation400
      | GetConversation401
      | GetConversation403
      | GetConversation404
      | GetConversation429
      | GetConversation500
    >,
    unknown
  >({
    method: 'GET',
    url: getGetConversationUrl({ conversationId }).toString(),
    params,
    ...requestConfig,
  })
  return res.data
}
