/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../../../client/fetch-react-query'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '../../../../client/fetch-react-query'
import type {
  DeleteConversationMutationRequest,
  DeleteConversationMutationResponse,
  DeleteConversationPathParams,
  DeleteConversation400,
  DeleteConversation401,
  DeleteConversation403,
  DeleteConversation404,
  DeleteConversation429,
  DeleteConversation500,
} from '../../types/DeleteConversation'

function getDeleteConversationUrl({
  conversationId,
}: { conversationId: DeleteConversationPathParams['conversationId'] }) {
  return `/conversations/${conversationId}` as const
}

/**
 * @description Delete a conversation
 * {@link /conversations/:conversationId}
 */
export async function deleteConversation(
  {
    conversationId,
    data,
  }: {
    conversationId: DeleteConversationPathParams['conversationId']
    data: DeleteConversationMutationRequest
  },
  config: Partial<RequestConfig<DeleteConversationMutationRequest>> & {
    client?: typeof fetch
  } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const requestData = data
  const res = await request<
    DeleteConversationMutationResponse,
    ResponseErrorConfig<
      | DeleteConversation400
      | DeleteConversation401
      | DeleteConversation403
      | DeleteConversation404
      | DeleteConversation429
      | DeleteConversation500
    >,
    DeleteConversationMutationRequest
  >({
    method: 'DELETE',
    url: getDeleteConversationUrl({ conversationId }).toString(),
    data: requestData,
    ...requestConfig,
  })
  return res.data
}
