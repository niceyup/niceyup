/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../../../client/fetch-react-query'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '../../../../client/fetch-react-query'
import type {
  CreateSourceMutationRequest,
  CreateSourceMutationResponse,
  CreateSource400,
  CreateSource401,
  CreateSource403,
  CreateSource404,
  CreateSource429,
  CreateSource500,
} from '../../types/CreateSource'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { createSource } from '../operations/createSource'
import { useMutation } from '@tanstack/react-query'

export const createSourceMutationKey = () => [{ url: '/sources' }] as const

export type CreateSourceMutationKey = ReturnType<typeof createSourceMutationKey>

/**
 * @description Create a new source
 * {@link /sources}
 */
export function useCreateSource<TContext>(
  options: {
    mutation?: UseMutationOptions<
      CreateSourceMutationResponse,
      ResponseErrorConfig<
        | CreateSource400
        | CreateSource401
        | CreateSource403
        | CreateSource404
        | CreateSource429
        | CreateSource500
      >,
      { data: CreateSourceMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<CreateSourceMutationRequest>> & {
      client?: typeof fetch
    }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? createSourceMutationKey()

  return useMutation<
    CreateSourceMutationResponse,
    ResponseErrorConfig<
      | CreateSource400
      | CreateSource401
      | CreateSource403
      | CreateSource404
      | CreateSource429
      | CreateSource500
    >,
    { data: CreateSourceMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ data }) => {
        return createSource({ data }, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
