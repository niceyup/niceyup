/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  ListConversationsQueryParams,
  ListConversations200,
  ListConversations400,
  ListConversations401,
  ListConversations403,
  ListConversations404,
  ListConversations429,
  ListConversations500,
  ListConversationsQueryResponse,
} from '../types/ListConversations'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const listConversationsQueryParamsSchema = z.object({
  organizationId: z.string().optional(),
  organizationSlug: z.string().optional(),
  teamId: z.string().optional(),
  agentId: z.string(),
}) as unknown as ToZod<ListConversationsQueryParams>

export type ListConversationsQueryParamsSchema = ListConversationsQueryParams

/**
 * @description Success
 */
export const listConversations200Schema = z
  .object({
    conversations: z.array(
      z.object({
        id: z.string(),
        title: z.string(),
      }),
    ),
  })
  .describe('Success') as unknown as ToZod<ListConversations200>

export type ListConversations200Schema = ListConversations200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const listConversations400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<ListConversations400>

export type ListConversations400Schema = ListConversations400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const listConversations401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<ListConversations401>

export type ListConversations401Schema = ListConversations401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const listConversations403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<ListConversations403>

export type ListConversations403Schema = ListConversations403

/**
 * @description Not Found. The requested resource was not found.
 */
export const listConversations404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<ListConversations404>

export type ListConversations404Schema = ListConversations404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const listConversations429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<ListConversations429>

export type ListConversations429Schema = ListConversations429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const listConversations500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<ListConversations500>

export type ListConversations500Schema = ListConversations500

export const listConversationsQueryResponseSchema = z.lazy(
  () => listConversations200Schema,
) as unknown as ToZod<ListConversationsQueryResponse>

export type ListConversationsQueryResponseSchema =
  ListConversationsQueryResponse
