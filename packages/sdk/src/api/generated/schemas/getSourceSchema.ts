/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  GetSourcePathParams,
  GetSourceQueryParams,
  GetSource200,
  GetSource400,
  GetSource401,
  GetSource403,
  GetSource404,
  GetSource429,
  GetSource500,
  GetSourceQueryResponse,
} from '../types/GetSource'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const getSourcePathParamsSchema = z.object({
  sourceId: z.string(),
}) as unknown as ToZod<GetSourcePathParams>

export type GetSourcePathParamsSchema = GetSourcePathParams

export const getSourceQueryParamsSchema = z
  .object({
    organizationId: z.string().optional(),
    organizationSlug: z.string().optional(),
  })
  .optional() as unknown as ToZod<GetSourceQueryParams>

export type GetSourceQueryParamsSchema = GetSourceQueryParams

/**
 * @description Success
 */
export const getSource200Schema = z
  .object({
    source: z.object({
      id: z.string(),
      name: z.string(),
      type: z.enum(['file', 'text', 'question-answer', 'website', 'database']),
    }),
  })
  .describe('Success') as unknown as ToZod<GetSource200>

export type GetSource200Schema = GetSource200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const getSource400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<GetSource400>

export type GetSource400Schema = GetSource400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const getSource401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<GetSource401>

export type GetSource401Schema = GetSource401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const getSource403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<GetSource403>

export type GetSource403Schema = GetSource403

/**
 * @description Not Found. The requested resource was not found.
 */
export const getSource404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<GetSource404>

export type GetSource404Schema = GetSource404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const getSource429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<GetSource429>

export type GetSource429Schema = GetSource429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const getSource500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<GetSource500>

export type GetSource500Schema = GetSource500

export const getSourceQueryResponseSchema = z.lazy(
  () => getSource200Schema,
) as unknown as ToZod<GetSourceQueryResponse>

export type GetSourceQueryResponseSchema = GetSourceQueryResponse
