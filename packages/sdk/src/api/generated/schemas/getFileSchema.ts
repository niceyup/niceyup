/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  GetFilePathParams,
  GetFileQueryParams,
  GetFile200,
  GetFile400,
  GetFile401,
  GetFile403,
  GetFile404,
  GetFile429,
  GetFile500,
  GetFileQueryResponse,
} from '../types/GetFile'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const getFilePathParamsSchema = z.object({
  fileId: z.string(),
}) as unknown as ToZod<GetFilePathParams>

export type GetFilePathParamsSchema = GetFilePathParams

export const getFileQueryParamsSchema = z.object({
  organizationId: z.string().nullable().nullish(),
  organizationSlug: z.string().nullable().nullish(),
  teamId: z.string().nullable().nullish(),
  expires: z.coerce.number().default(300),
}) as unknown as ToZod<GetFileQueryParams>

export type GetFileQueryParamsSchema = GetFileQueryParams

/**
 * @description Success
 */
export const getFile200Schema = z
  .object({
    file: z.object({
      id: z.string(),
      fileName: z.string(),
      fileMimeType: z.string(),
      fileUri: z.string(),
      bucket: z.enum(['default', 'engine']),
      scope: z.enum(['public', 'conversations', 'sources']),
      url: z.string(),
    }),
  })
  .describe('Success') as unknown as ToZod<GetFile200>

export type GetFile200Schema = GetFile200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const getFile400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<GetFile400>

export type GetFile400Schema = GetFile400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const getFile401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<GetFile401>

export type GetFile401Schema = GetFile401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const getFile403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<GetFile403>

export type GetFile403Schema = GetFile403

/**
 * @description Not Found. The requested resource was not found.
 */
export const getFile404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<GetFile404>

export type GetFile404Schema = GetFile404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const getFile429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<GetFile429>

export type GetFile429Schema = GetFile429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const getFile500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<GetFile500>

export type GetFile500Schema = GetFile500

export const getFileQueryResponseSchema = z.lazy(
  () => getFile200Schema,
) as unknown as ToZod<GetFileQueryResponse>

export type GetFileQueryResponseSchema = GetFileQueryResponse
