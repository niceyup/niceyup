/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  GetStructuredSourcePathParams,
  GetStructuredSourceQueryParams,
  GetStructuredSource200,
  GetStructuredSource400,
  GetStructuredSource401,
  GetStructuredSource403,
  GetStructuredSource404,
  GetStructuredSource429,
  GetStructuredSource500,
  GetStructuredSourceQueryResponse,
} from '../types/GetStructuredSource'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const getStructuredSourcePathParamsSchema = z.object({
  sourceId: z.string(),
}) as unknown as ToZod<GetStructuredSourcePathParams>

export type GetStructuredSourcePathParamsSchema = GetStructuredSourcePathParams

export const getStructuredSourceQueryParamsSchema = z
  .object({
    organizationId: z.string().optional(),
    organizationSlug: z.string().optional(),
  })
  .optional() as unknown as ToZod<GetStructuredSourceQueryParams>

export type GetStructuredSourceQueryParamsSchema =
  GetStructuredSourceQueryParams

/**
 * @description Success
 */
export const getStructuredSource200Schema = z
  .object({
    structuredSource: z.object({
      id: z.string(),
      tablesMetadata: z
        .array(
          z.object({
            name: z.string(),
            meta: z
              .object({
                description: z.string().optional(),
              })
              .optional(),
            columns: z.array(
              z.object({
                name: z.string(),
                meta: z
                  .object({
                    description: z.string().optional(),
                    properNoun: z.boolean().optional(),
                  })
                  .optional(),
                data_type: z.string(),
                foreign_table: z.string().optional(),
                foreign_column: z.string().optional(),
              }),
            ),
          }),
        )
        .nullable(),
      queryExamples: z
        .array(
          z.object({
            input: z.string(),
            query: z.string(),
          }),
        )
        .nullable(),
    }),
  })
  .describe('Success') as unknown as ToZod<GetStructuredSource200>

export type GetStructuredSource200Schema = GetStructuredSource200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const getStructuredSource400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<GetStructuredSource400>

export type GetStructuredSource400Schema = GetStructuredSource400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const getStructuredSource401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<GetStructuredSource401>

export type GetStructuredSource401Schema = GetStructuredSource401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const getStructuredSource403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<GetStructuredSource403>

export type GetStructuredSource403Schema = GetStructuredSource403

/**
 * @description Not Found. The requested resource was not found.
 */
export const getStructuredSource404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<GetStructuredSource404>

export type GetStructuredSource404Schema = GetStructuredSource404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const getStructuredSource429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<GetStructuredSource429>

export type GetStructuredSource429Schema = GetStructuredSource429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const getStructuredSource500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<GetStructuredSource500>

export type GetStructuredSource500Schema = GetStructuredSource500

export const getStructuredSourceQueryResponseSchema = z.lazy(
  () => getStructuredSource200Schema,
) as unknown as ToZod<GetStructuredSourceQueryResponse>

export type GetStructuredSourceQueryResponseSchema =
  GetStructuredSourceQueryResponse
