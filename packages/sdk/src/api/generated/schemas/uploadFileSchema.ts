/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  UploadFileHeaderParams,
  UploadFile200,
  UploadFile400,
  UploadFile401,
  UploadFile403,
  UploadFile404,
  UploadFile429,
  UploadFile500,
  UploadFileMutationResponse,
} from '../types/UploadFile'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const uploadFileHeaderParamsSchema = z.object({
  'x-upload-signature': z.string(),
}) as unknown as ToZod<UploadFileHeaderParams>

export type UploadFileHeaderParamsSchema = UploadFileHeaderParams

/**
 * @description Success
 */
export const uploadFile200Schema = z
  .object({
    file: z.object({
      id: z.string(),
      fileName: z.string(),
      fileMimeType: z.string(),
      fileUri: z.string(),
      bucket: z.enum(['default', 'engine']),
      scope: z.enum(['public', 'conversations', 'sources']),
    }),
  })
  .describe('Success') as unknown as ToZod<UploadFile200>

export type UploadFile200Schema = UploadFile200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const uploadFile400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<UploadFile400>

export type UploadFile400Schema = UploadFile400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const uploadFile401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<UploadFile401>

export type UploadFile401Schema = UploadFile401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const uploadFile403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<UploadFile403>

export type UploadFile403Schema = UploadFile403

/**
 * @description Not Found. The requested resource was not found.
 */
export const uploadFile404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<UploadFile404>

export type UploadFile404Schema = UploadFile404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const uploadFile429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<UploadFile429>

export type UploadFile429Schema = UploadFile429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const uploadFile500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<UploadFile500>

export type UploadFile500Schema = UploadFile500

export const uploadFileMutationResponseSchema = z.lazy(
  () => uploadFile200Schema,
) as unknown as ToZod<UploadFileMutationResponse>

export type UploadFileMutationResponseSchema = UploadFileMutationResponse
