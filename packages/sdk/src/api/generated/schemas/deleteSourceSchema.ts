/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  DeleteSourcePathParams,
  DeleteSource204,
  DeleteSource400,
  DeleteSource401,
  DeleteSource403,
  DeleteSource404,
  DeleteSource429,
  DeleteSource500,
  DeleteSourceMutationRequest,
  DeleteSourceMutationResponse,
} from '../types/DeleteSource'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const deleteSourcePathParamsSchema = z.object({
  sourceId: z.string(),
}) as unknown as ToZod<DeleteSourcePathParams>

export type DeleteSourcePathParamsSchema = DeleteSourcePathParams

/**
 * @description Success
 */
export const deleteSource204Schema = z
  .enum([])
  .describe('Success')
  .nullable() as unknown as ToZod<DeleteSource204>

export type DeleteSource204Schema = DeleteSource204

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const deleteSource400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<DeleteSource400>

export type DeleteSource400Schema = DeleteSource400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const deleteSource401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<DeleteSource401>

export type DeleteSource401Schema = DeleteSource401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const deleteSource403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<DeleteSource403>

export type DeleteSource403Schema = DeleteSource403

/**
 * @description Not Found. The requested resource was not found.
 */
export const deleteSource404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<DeleteSource404>

export type DeleteSource404Schema = DeleteSource404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const deleteSource429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<DeleteSource429>

export type DeleteSource429Schema = DeleteSource429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const deleteSource500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<DeleteSource500>

export type DeleteSource500Schema = DeleteSource500

export const deleteSourceMutationRequestSchema = z.object({
  organizationId: z.string().nullable().nullish(),
  organizationSlug: z.string().nullable().nullish(),
  destroy: z.boolean().optional(),
}) as unknown as ToZod<DeleteSourceMutationRequest>

export type DeleteSourceMutationRequestSchema = DeleteSourceMutationRequest

export const deleteSourceMutationResponseSchema = z.lazy(
  () => deleteSource204Schema,
) as unknown as ToZod<DeleteSourceMutationResponse>

export type DeleteSourceMutationResponseSchema = DeleteSourceMutationResponse
