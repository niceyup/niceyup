/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  GetDatabaseConnectionPathParams,
  GetDatabaseConnectionQueryParams,
  GetDatabaseConnection200,
  GetDatabaseConnection400,
  GetDatabaseConnection401,
  GetDatabaseConnection403,
  GetDatabaseConnection404,
  GetDatabaseConnection429,
  GetDatabaseConnection500,
  GetDatabaseConnectionQueryResponse,
} from '../types/GetDatabaseConnection'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const getDatabaseConnectionPathParamsSchema = z.object({
  databaseConnectionId: z.string(),
}) as unknown as ToZod<GetDatabaseConnectionPathParams>

export type GetDatabaseConnectionPathParamsSchema =
  GetDatabaseConnectionPathParams

export const getDatabaseConnectionQueryParamsSchema = z
  .object({
    organizationId: z.string().optional(),
    organizationSlug: z.string().optional(),
  })
  .optional() as unknown as ToZod<GetDatabaseConnectionQueryParams>

export type GetDatabaseConnectionQueryParamsSchema =
  GetDatabaseConnectionQueryParams

/**
 * @description Success
 */
export const getDatabaseConnection200Schema = z
  .object({
    databaseConnection: z.object({
      id: z.string(),
      name: z.string(),
      dialect: z.enum(['postgresql', 'mysql', 'sqlite']).nullable(),
      payload: z
        .object({
          host: z.string().optional(),
          port: z.string().optional(),
          user: z.string().optional(),
          password: z.string().optional(),
          database: z.string().optional(),
          schema: z.string().optional(),
          filePath: z.string().optional(),
        })
        .nullable(),
    }),
  })
  .describe('Success') as unknown as ToZod<GetDatabaseConnection200>

export type GetDatabaseConnection200Schema = GetDatabaseConnection200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const getDatabaseConnection400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<GetDatabaseConnection400>

export type GetDatabaseConnection400Schema = GetDatabaseConnection400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const getDatabaseConnection401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<GetDatabaseConnection401>

export type GetDatabaseConnection401Schema = GetDatabaseConnection401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const getDatabaseConnection403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<GetDatabaseConnection403>

export type GetDatabaseConnection403Schema = GetDatabaseConnection403

/**
 * @description Not Found. The requested resource was not found.
 */
export const getDatabaseConnection404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<GetDatabaseConnection404>

export type GetDatabaseConnection404Schema = GetDatabaseConnection404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const getDatabaseConnection429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<GetDatabaseConnection429>

export type GetDatabaseConnection429Schema = GetDatabaseConnection429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const getDatabaseConnection500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<GetDatabaseConnection500>

export type GetDatabaseConnection500Schema = GetDatabaseConnection500

export const getDatabaseConnectionQueryResponseSchema = z.lazy(
  () => getDatabaseConnection200Schema,
) as unknown as ToZod<GetDatabaseConnectionQueryResponse>

export type GetDatabaseConnectionQueryResponseSchema =
  GetDatabaseConnectionQueryResponse
