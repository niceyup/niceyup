/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  CreateSource200,
  CreateSource400,
  CreateSource401,
  CreateSource403,
  CreateSource404,
  CreateSource429,
  CreateSource500,
  CreateSourceMutationRequest,
  CreateSourceMutationResponse,
} from '../types/CreateSource'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

/**
 * @description Success
 */
export const createSource200Schema = z
  .object({
    sourceId: z.string(),
    explorerNode: z
      .object({
        itemId: z.string(),
      })
      .optional(),
  })
  .describe('Success') as unknown as ToZod<CreateSource200>

export type CreateSource200Schema = CreateSource200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const createSource400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<CreateSource400>

export type CreateSource400Schema = CreateSource400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const createSource401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<CreateSource401>

export type CreateSource401Schema = CreateSource401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const createSource403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<CreateSource403>

export type CreateSource403Schema = CreateSource403

/**
 * @description Not Found. The requested resource was not found.
 */
export const createSource404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<CreateSource404>

export type CreateSource404Schema = CreateSource404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const createSource429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<CreateSource429>

export type CreateSource429Schema = CreateSource429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const createSource500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<CreateSource500>

export type CreateSource500Schema = CreateSource500

export const createSourceMutationRequestSchema = z.object({
  organizationId: z.string().nullable().nullish(),
  organizationSlug: z.string().nullable().nullish(),
  name: z.string(),
  type: z.enum(['file', 'text', 'question-answer', 'website', 'database']),
  explorerNode: z
    .object({
      folderId: z.string().nullable().nullish(),
    })
    .optional(),
}) as unknown as ToZod<CreateSourceMutationRequest>

export type CreateSourceMutationRequestSchema = CreateSourceMutationRequest

export const createSourceMutationResponseSchema = z.lazy(
  () => createSource200Schema,
) as unknown as ToZod<CreateSourceMutationResponse>

export type CreateSourceMutationResponseSchema = CreateSourceMutationResponse
