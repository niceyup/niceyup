/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  ListDatabaseConnectionsQueryParams,
  ListDatabaseConnections200,
  ListDatabaseConnections400,
  ListDatabaseConnections401,
  ListDatabaseConnections403,
  ListDatabaseConnections404,
  ListDatabaseConnections429,
  ListDatabaseConnections500,
  ListDatabaseConnectionsQueryResponse,
} from '../types/ListDatabaseConnections'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const listDatabaseConnectionsQueryParamsSchema = z
  .object({
    organizationId: z.string().optional(),
    organizationSlug: z.string().optional(),
  })
  .optional() as unknown as ToZod<ListDatabaseConnectionsQueryParams>

export type ListDatabaseConnectionsQueryParamsSchema =
  ListDatabaseConnectionsQueryParams

/**
 * @description Success
 */
export const listDatabaseConnections200Schema = z
  .object({
    databaseConnections: z.array(
      z.object({
        id: z.string(),
        name: z.string(),
        dialect: z.enum(['postgresql', 'mysql', 'sqlite']).nullable(),
        payload: z
          .object({
            host: z.string().optional(),
            port: z.string().optional(),
            user: z.string().optional(),
            password: z.string().optional(),
            database: z.string().optional(),
            schema: z.string().optional(),
            filePath: z.string().optional(),
          })
          .nullable(),
      }),
    ),
  })
  .describe('Success') as unknown as ToZod<ListDatabaseConnections200>

export type ListDatabaseConnections200Schema = ListDatabaseConnections200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const listDatabaseConnections400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<ListDatabaseConnections400>

export type ListDatabaseConnections400Schema = ListDatabaseConnections400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const listDatabaseConnections401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<ListDatabaseConnections401>

export type ListDatabaseConnections401Schema = ListDatabaseConnections401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const listDatabaseConnections403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<ListDatabaseConnections403>

export type ListDatabaseConnections403Schema = ListDatabaseConnections403

/**
 * @description Not Found. The requested resource was not found.
 */
export const listDatabaseConnections404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<ListDatabaseConnections404>

export type ListDatabaseConnections404Schema = ListDatabaseConnections404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const listDatabaseConnections429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<ListDatabaseConnections429>

export type ListDatabaseConnections429Schema = ListDatabaseConnections429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const listDatabaseConnections500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<ListDatabaseConnections500>

export type ListDatabaseConnections500Schema = ListDatabaseConnections500

export const listDatabaseConnectionsQueryResponseSchema = z.lazy(
  () => listDatabaseConnections200Schema,
) as unknown as ToZod<ListDatabaseConnectionsQueryResponse>

export type ListDatabaseConnectionsQueryResponseSchema =
  ListDatabaseConnectionsQueryResponse
