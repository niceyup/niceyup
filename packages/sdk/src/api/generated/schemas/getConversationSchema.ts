/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  GetConversationPathParams,
  GetConversationQueryParams,
  GetConversation200,
  GetConversation400,
  GetConversation401,
  GetConversation403,
  GetConversation404,
  GetConversation429,
  GetConversation500,
  GetConversationQueryResponse,
} from '../types/GetConversation'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const getConversationPathParamsSchema = z.object({
  conversationId: z.string(),
}) as unknown as ToZod<GetConversationPathParams>

export type GetConversationPathParamsSchema = GetConversationPathParams

export const getConversationQueryParamsSchema = z.object({
  organizationId: z.string().optional(),
  organizationSlug: z.string().optional(),
  teamId: z.string().optional(),
  agentId: z.string(),
}) as unknown as ToZod<GetConversationQueryParams>

export type GetConversationQueryParamsSchema = GetConversationQueryParams

/**
 * @description Success
 */
export const getConversation200Schema = z
  .object({
    conversation: z.object({
      id: z.string(),
      title: z.string(),
    }),
  })
  .describe('Success') as unknown as ToZod<GetConversation200>

export type GetConversation200Schema = GetConversation200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const getConversation400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<GetConversation400>

export type GetConversation400Schema = GetConversation400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const getConversation401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<GetConversation401>

export type GetConversation401Schema = GetConversation401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const getConversation403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<GetConversation403>

export type GetConversation403Schema = GetConversation403

/**
 * @description Not Found. The requested resource was not found.
 */
export const getConversation404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<GetConversation404>

export type GetConversation404Schema = GetConversation404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const getConversation429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<GetConversation429>

export type GetConversation429Schema = GetConversation429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const getConversation500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<GetConversation500>

export type GetConversation500Schema = GetConversation500

export const getConversationQueryResponseSchema = z.lazy(
  () => getConversation200Schema,
) as unknown as ToZod<GetConversationQueryResponse>

export type GetConversationQueryResponseSchema = GetConversationQueryResponse
