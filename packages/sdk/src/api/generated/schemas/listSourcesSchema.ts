/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  ListSourcesQueryParams,
  ListSources200,
  ListSources400,
  ListSources401,
  ListSources403,
  ListSources404,
  ListSources429,
  ListSources500,
  ListSourcesQueryResponse,
} from '../types/ListSources'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const listSourcesQueryParamsSchema = z
  .object({
    organizationId: z.string().optional(),
    organizationSlug: z.string().optional(),
  })
  .optional() as unknown as ToZod<ListSourcesQueryParams>

export type ListSourcesQueryParamsSchema = ListSourcesQueryParams

/**
 * @description Success
 */
export const listSources200Schema = z
  .object({
    sources: z.array(
      z.object({
        id: z.string(),
        name: z.string(),
        type: z.enum(['text', 'structured']),
        databaseConnectionId: z.string().nullable(),
      }),
    ),
  })
  .describe('Success') as unknown as ToZod<ListSources200>

export type ListSources200Schema = ListSources200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const listSources400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<ListSources400>

export type ListSources400Schema = ListSources400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const listSources401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<ListSources401>

export type ListSources401Schema = ListSources401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const listSources403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<ListSources403>

export type ListSources403Schema = ListSources403

/**
 * @description Not Found. The requested resource was not found.
 */
export const listSources404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<ListSources404>

export type ListSources404Schema = ListSources404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const listSources429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<ListSources429>

export type ListSources429Schema = ListSources429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const listSources500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<ListSources500>

export type ListSources500Schema = ListSources500

export const listSourcesQueryResponseSchema = z.lazy(
  () => listSources200Schema,
) as unknown as ToZod<ListSourcesQueryResponse>

export type ListSourcesQueryResponseSchema = ListSourcesQueryResponse
