/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  ListConnectionsQueryParams,
  ListConnections200,
  ListConnections400,
  ListConnections401,
  ListConnections403,
  ListConnections404,
  ListConnections429,
  ListConnections500,
  ListConnectionsQueryResponse,
} from '../types/ListConnections'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const listConnectionsQueryParamsSchema = z
  .object({
    organizationId: z.string().optional(),
    organizationSlug: z.string().optional(),
    app: z.string().optional(),
  })
  .optional() as unknown as ToZod<ListConnectionsQueryParams>

export type ListConnectionsQueryParamsSchema = ListConnectionsQueryParams

/**
 * @description Success
 */
export const listConnections200Schema = z
  .object({
    connections: z.array(
      z.object({
        id: z.string(),
        app: z.string(),
        name: z.string(),
        payload: z.object({}).catchall(z.any()).nullable(),
      }),
    ),
  })
  .describe('Success') as unknown as ToZod<ListConnections200>

export type ListConnections200Schema = ListConnections200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const listConnections400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<ListConnections400>

export type ListConnections400Schema = ListConnections400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const listConnections401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<ListConnections401>

export type ListConnections401Schema = ListConnections401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const listConnections403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<ListConnections403>

export type ListConnections403Schema = ListConnections403

/**
 * @description Not Found. The requested resource was not found.
 */
export const listConnections404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<ListConnections404>

export type ListConnections404Schema = ListConnections404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const listConnections429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<ListConnections429>

export type ListConnections429Schema = ListConnections429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const listConnections500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<ListConnections500>

export type ListConnections500Schema = ListConnections500

export const listConnectionsQueryResponseSchema = z.lazy(
  () => listConnections200Schema,
) as unknown as ToZod<ListConnectionsQueryResponse>

export type ListConnectionsQueryResponseSchema = ListConnectionsQueryResponse
