/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../../client/fetch'
import type { RequestConfig, ResponseErrorConfig } from '../../../client/fetch'
import type {
  GetStructuredSourceQueryResponse,
  GetStructuredSourcePathParams,
  GetStructuredSourceQueryParams,
  GetStructuredSource400,
  GetStructuredSource401,
  GetStructuredSource403,
  GetStructuredSource404,
  GetStructuredSource429,
  GetStructuredSource500,
} from '../types/GetStructuredSource'

function getGetStructuredSourceUrl({
  sourceId,
}: { sourceId: GetStructuredSourcePathParams['sourceId'] }) {
  return `/sources/${sourceId}/structured` as const
}

/**
 * @description Get structured source details
 * {@link /sources/:sourceId/structured}
 */
export async function getStructuredSource(
  {
    sourceId,
    params,
  }: {
    sourceId: GetStructuredSourcePathParams['sourceId']
    params?: GetStructuredSourceQueryParams
  },
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<
    GetStructuredSourceQueryResponse,
    ResponseErrorConfig<
      | GetStructuredSource400
      | GetStructuredSource401
      | GetStructuredSource403
      | GetStructuredSource404
      | GetStructuredSource429
      | GetStructuredSource500
    >,
    unknown
  >({
    method: 'GET',
    url: getGetStructuredSourceUrl({ sourceId }).toString(),
    params,
    ...requestConfig,
  })
  return res
}
