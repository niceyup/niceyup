/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../../client/fetch'
import type { RequestConfig, ResponseErrorConfig } from '../../../client/fetch'
import type {
  SendQuestionMessageMutationRequest,
  SendQuestionMessageMutationResponse,
  SendQuestionMessagePathParams,
  SendQuestionMessage400,
  SendQuestionMessage401,
  SendQuestionMessage403,
  SendQuestionMessage404,
  SendQuestionMessage429,
  SendQuestionMessage500,
} from '../types/SendQuestionMessage'

function getSendQuestionMessageUrl({
  conversationId,
}: { conversationId: SendQuestionMessagePathParams['conversationId'] }) {
  return `/conversations/${conversationId}/messages/send-question` as const
}

/**
 * @description Send a question message to a conversation
 * {@link /conversations/:conversationId/messages/send-question}
 */
export async function sendQuestionMessage(
  {
    conversationId,
    data,
  }: {
    conversationId: SendQuestionMessagePathParams['conversationId']
    data: SendQuestionMessageMutationRequest
  },
  config: Partial<RequestConfig<SendQuestionMessageMutationRequest>> & {
    client?: typeof fetch
  } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const requestData = data
  const res = await request<
    SendQuestionMessageMutationResponse,
    ResponseErrorConfig<
      | SendQuestionMessage400
      | SendQuestionMessage401
      | SendQuestionMessage403
      | SendQuestionMessage404
      | SendQuestionMessage429
      | SendQuestionMessage500
    >,
    SendQuestionMessageMutationRequest
  >({
    method: 'POST',
    url: getSendQuestionMessageUrl({ conversationId }).toString(),
    data: requestData,
    ...requestConfig,
  })
  return res
}
