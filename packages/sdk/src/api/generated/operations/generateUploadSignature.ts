/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../../client/fetch'
import type { RequestConfig, ResponseErrorConfig } from '../../../client/fetch'
import type {
  GenerateUploadSignatureMutationRequest,
  GenerateUploadSignatureMutationResponse,
  GenerateUploadSignatureHeaderParams,
  GenerateUploadSignature400,
  GenerateUploadSignature401,
  GenerateUploadSignature403,
  GenerateUploadSignature404,
  GenerateUploadSignature429,
  GenerateUploadSignature500,
} from '../types/GenerateUploadSignature'

function getGenerateUploadSignatureUrl() {
  return `/files/signature` as const
}

/**
 * @description Generate Upload Signature
 * {@link /files/signature}
 */
export async function generateUploadSignature(
  {
    data,
    headers,
  }: {
    data: GenerateUploadSignatureMutationRequest
    headers: GenerateUploadSignatureHeaderParams
  },
  config: Partial<RequestConfig<GenerateUploadSignatureMutationRequest>> & {
    client?: typeof fetch
  } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const requestData = data
  const res = await request<
    GenerateUploadSignatureMutationResponse,
    ResponseErrorConfig<
      | GenerateUploadSignature400
      | GenerateUploadSignature401
      | GenerateUploadSignature403
      | GenerateUploadSignature404
      | GenerateUploadSignature429
      | GenerateUploadSignature500
    >,
    GenerateUploadSignatureMutationRequest
  >({
    method: 'POST',
    url: getGenerateUploadSignatureUrl().toString(),
    data: requestData,
    ...requestConfig,
    headers: { ...headers, ...requestConfig.headers },
  })
  return res
}
