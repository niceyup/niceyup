/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../../client/fetch'
import type { RequestConfig, ResponseErrorConfig } from '../../../client/fetch'
import type {
  ListMessagesQueryResponse,
  ListMessagesPathParams,
  ListMessagesQueryParams,
  ListMessages400,
  ListMessages401,
  ListMessages403,
  ListMessages404,
  ListMessages429,
  ListMessages500,
} from '../types/ListMessages'

function getListMessagesUrl({
  conversationId,
}: { conversationId: ListMessagesPathParams['conversationId'] }) {
  return `/conversations/${conversationId}/messages` as const
}

/**
 * @description Get all messages from a conversation
 * {@link /conversations/:conversationId/messages}
 */
export async function listMessages(
  {
    conversationId,
    params,
  }: {
    conversationId: ListMessagesPathParams['conversationId']
    params: ListMessagesQueryParams
  },
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<
    ListMessagesQueryResponse,
    ResponseErrorConfig<
      | ListMessages400
      | ListMessages401
      | ListMessages403
      | ListMessages404
      | ListMessages429
      | ListMessages500
    >,
    unknown
  >({
    method: 'GET',
    url: getListMessagesUrl({ conversationId }).toString(),
    params,
    ...requestConfig,
  })
  return res
}
